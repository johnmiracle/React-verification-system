{"ast":null,"code":"/** @format */\nimport Axios from 'axios';\nimport { PRODUCT_VERIFY_REQUEST, PRODUCT_VERIFY_SUCCESS, PRODUCT_VERIFY_FAIL } from '../constants/productConstants';\n\nconst verify = code => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_VERIFY_REQUEST,\n    payload: {\n      code\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    },\n    farmPackage: {\n      farmInfo\n    }\n  } = getState();\n  let farmId = farmInfo._id;\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/user/verify-product', {\n      code,\n      farmId\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_VERIFY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_VERIFY_FAIL,\n      payload: message\n    });\n  }\n};\n\nexport { verify };","map":{"version":3,"sources":["/Users/apple/Downloads/React-verification-system/client/src/actions/productActions.js"],"names":["Axios","PRODUCT_VERIFY_REQUEST","PRODUCT_VERIFY_SUCCESS","PRODUCT_VERIFY_FAIL","verify","code","dispatch","getState","type","payload","userSignin","userInfo","farmPackage","farmInfo","farmId","_id","data","post","headers","Authorization","token","error","message","response"],"mappings":"AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,sBADD,EAECC,sBAFD,EAGCC,mBAHD,QAIO,+BAJP;;AAMA,MAAMC,MAAM,GAAIC,IAAD,IAAU,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtDD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEP,sBAAR;AAAgCQ,IAAAA,OAAO,EAAE;AAAEJ,MAAAA;AAAF;AAAzC,GAAD,CAAR;AACA,QAAM;AACLK,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF,KADP;AAELC,IAAAA,WAAW,EAAE;AAAEC,MAAAA;AAAF;AAFR,MAGFN,QAAQ,EAHZ;AAIC,MAAIO,MAAM,GAAGD,QAAQ,CAACE,GAAtB;;AACD,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACiB,IAAN,CACtB,0BADsB,EAEtB;AAAEZ,MAAAA,IAAF;AAAQS,MAAAA;AAAR,KAFsB,EAGtB;AACCI,MAAAA,OAAO,EAAE;AACRC,QAAAA,aAAa,EAAE,YAAYR,QAAQ,CAACS;AAD5B;AADV,KAHsB,CAAvB;AASAd,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEN,sBAAR;AAAgCO,MAAAA,OAAO,EAAEO;AAAzC,KAAD,CAAR;AACA,GAXD,CAWE,OAAOK,KAAP,EAAc;AACf,UAAMC,OAAO,GACZD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeP,IAAf,CAAoBM,OAAtC,GAAgDD,KAAK,CAACE,QAAN,CAAeP,IAAf,CAAoBM,OAApE,GAA8ED,KAAK,CAACC,OADrF;AAEAhB,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,mBAAR;AAA6BM,MAAAA,OAAO,EAAEa;AAAtC,KAAD,CAAR;AACA;AACD,CAvBD;;AAyBA,SAASlB,MAAT","sourcesContent":["/** @format */\r\n\r\nimport Axios from 'axios';\r\nimport {\r\n\tPRODUCT_VERIFY_REQUEST,\r\n\tPRODUCT_VERIFY_SUCCESS,\r\n\tPRODUCT_VERIFY_FAIL\r\n} from '../constants/productConstants';\r\n\r\nconst verify = (code) => async (dispatch, getState) => {\r\n\tdispatch({ type: PRODUCT_VERIFY_REQUEST, payload: { code } });\r\n\tconst {\r\n\t\tuserSignin: { userInfo },\r\n\t\tfarmPackage: { farmInfo }\r\n\t} = getState();\r\n  let farmId = farmInfo._id\r\n\ttry {\r\n\t\tconst { data } = await Axios.post(\r\n\t\t\t'/api/user/verify-product',\r\n\t\t\t{ code, farmId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: 'Bearer ' + userInfo.token\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\tdispatch({ type: PRODUCT_VERIFY_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message ? error.response.data.message : error.message;\r\n\t\tdispatch({ type: PRODUCT_VERIFY_FAIL, payload: message });\r\n\t}\r\n};\r\n\r\nexport { verify };\r\n"]},"metadata":{},"sourceType":"module"}