{"ast":null,"code":"import axios from \"axios\";\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_HISTORY_REQUEST, USER_HISTORY_SUCCESS, USER_HISTORY_FAIL, USER_LOCATION_REQUEST } from \"../constants/userConstants\";\n\nconst signin = (phone, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      phone,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/login\", {\n      phone,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\nconst logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\n\nconst register = (firstName, lastName, phone, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      firstName,\n      lastName,\n      phone,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/register\", {\n      firstName,\n      lastName,\n      phone,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\nconst location = (state, city, cluster) => async dispatch => {\n  dispatch({\n    type: USER_LOCATION_REQUEST,\n    payload: {\n      state,\n      city,\n      cluster\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/location', {\n      state,\n      city,\n      cluster\n    });\n    dispatch({\n      type: USER_LOCATION_SUCCESs,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LOCATION_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\nconst listHistoryMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: USER_HISTORY_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/user/history\", {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_HISTORY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_HISTORY_FAIL,\n      payload: message\n    });\n  }\n};\n\nexport { signin, register, location, logout, listHistoryMine };","map":{"version":3,"sources":["/Users/apple/Downloads/React-verification-system/client/src/actions/userActions.js"],"names":["axios","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_HISTORY_REQUEST","USER_HISTORY_SUCCESS","USER_HISTORY_FAIL","USER_LOCATION_REQUEST","signin","phone","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","firstName","lastName","location","state","city","cluster","USER_LOCATION_SUCCESs","USER_LOCATION_FAIL","listHistoryMine","getState","userSignin","userInfo","get","headers","Authorization","token"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_HISTORY_REQUEST,\r\n  USER_HISTORY_SUCCESS,\r\n  USER_HISTORY_FAIL,\r\n  USER_LOCATION_REQUEST,\r\n} from \"../constants/userConstants\";\r\n\r\nconst signin = (phone, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { phone, password } });\r\n  try {\r\n    const { data } = await axios.post(\"/api/login\", { phone, password });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SIGNIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_SIGNOUT });\r\n};\r\n\r\nconst register = (firstName, lastName, phone, password) => async (dispatch) => {\r\n  dispatch({\r\n    type: USER_REGISTER_REQUEST,\r\n    payload: { firstName, lastName, phone, password },\r\n  });\r\n  try {\r\n    const { data } = await axios.post(\"/api/register\", {\r\n      firstName,\r\n      lastName,\r\n      phone,\r\n      password,\r\n    });\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst location = (state, city, cluster) => async (dispatch) => {\r\n\tdispatch({\r\n\t\ttype: USER_LOCATION_REQUEST,\r\n\t\tpayload: { state, city, cluster }\r\n\t});\r\n\ttry {\r\n\t\tconst { data } = await axios.post('/api/location', {\r\n\t\t\tstate, city, cluster\r\n\t\t});\r\n\t\tdispatch({ type: USER_LOCATION_SUCCESs, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOCATION_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message ? error.response.data.message : error.message\r\n\t\t});\r\n\t}\r\n};\r\n\r\nconst listHistoryMine = () => async (dispatch, getState) => {\r\n  dispatch({ type: USER_HISTORY_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await axios.get(\"/api/user/history\", {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: USER_HISTORY_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: USER_HISTORY_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport { signin, register, location, logout, listHistoryMine };\r\n"]},"metadata":{},"sourceType":"module"}