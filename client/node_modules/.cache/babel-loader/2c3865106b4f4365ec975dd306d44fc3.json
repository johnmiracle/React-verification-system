{"ast":null,"code":"/** @format */\nimport Axios from 'axios';\nimport { PRODUCT_VERIFY_REQUEST, PRODUCT_VERIFY_SUCCESS, PRODUCT_VERIFY_FAIL, PRODUCT_SAVE_DETAIL } from '../constants/productConstants';\n\nconst saveFarmDetail = data => dispatch => {\n  dispatch({\n    type: PRODUCT_SAVE_DETAIL,\n    payload: data\n  });\n};\n\nconst verify = code => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_VERIFY_REQUEST,\n    payload: {\n      code\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    },\n    farmPackage: {\n      farmInfo\n    }\n  } = getState();\n  let farmId = farmInfo._id;\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/user/verify-product', {\n      code,\n      farmId\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_VERIFY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_VERIFY_FAIL,\n      payload: message\n    });\n  }\n};\n\nexport { verify, saveFarmDetail };","map":{"version":3,"sources":["/Users/apple/Downloads/React-verification-system/client/src/actions/productActions.js"],"names":["Axios","PRODUCT_VERIFY_REQUEST","PRODUCT_VERIFY_SUCCESS","PRODUCT_VERIFY_FAIL","PRODUCT_SAVE_DETAIL","saveFarmDetail","data","dispatch","type","payload","verify","code","getState","userSignin","userInfo","farmPackage","farmInfo","farmId","_id","post","headers","Authorization","token","error","message","response"],"mappings":"AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,sBADD,EAECC,sBAFD,EAGCC,mBAHD,EAICC,mBAJD,QAKO,+BALP;;AAOA,MAAMC,cAAc,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ,mBAAR;AAA6BK,IAAAA,OAAO,EAAEH;AAAtC,GAAD,CAAR;AACA,CAFD;;AAIA,MAAMI,MAAM,GAAIC,IAAD,IAAU,OAAOJ,QAAP,EAAiBK,QAAjB,KAA8B;AACtDL,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,sBAAR;AAAgCQ,IAAAA,OAAO,EAAE;AAAEE,MAAAA;AAAF;AAAzC,GAAD,CAAR;AACC,QAAM;AACJE,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF,KADR;AAENC,IAAAA,WAAW,EAAE;AAAEC,MAAAA;AAAF;AAFP,MAGHJ,QAAQ,EAHX;AAIA,MAAIK,MAAM,GAAGD,QAAQ,CAACE,GAAtB;;AACD,MAAI;AACH,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACmB,IAAN,CACtB,0BADsB,EAEtB;AAAER,MAAAA,IAAF;AAAQM,MAAAA;AAAR,KAFsB,EAGtB;AACCG,MAAAA,OAAO,EAAE;AACRC,QAAAA,aAAa,EAAE,YAAYP,QAAQ,CAACQ;AAD5B;AADV,KAHsB,CAAvB;AASAf,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,sBAAR;AAAgCO,MAAAA,OAAO,EAAEH;AAAzC,KAAD,CAAR;AACA,GAXD,CAWE,OAAOiB,KAAP,EAAc;AACf,UAAMC,OAAO,GACZD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAenB,IAAf,CAAoBkB,OAAtC,GAAgDD,KAAK,CAACE,QAAN,CAAenB,IAAf,CAAoBkB,OAApE,GAA8ED,KAAK,CAACC,OADrF;AAEAjB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,mBAAR;AAA6BM,MAAAA,OAAO,EAAEe;AAAtC,KAAD,CAAR;AACA;AACD,CAvBD;;AAyBA,SAASd,MAAT,EAAiBL,cAAjB","sourcesContent":["/** @format */\r\n\r\nimport Axios from 'axios';\r\nimport {\r\n\tPRODUCT_VERIFY_REQUEST,\r\n\tPRODUCT_VERIFY_SUCCESS,\r\n\tPRODUCT_VERIFY_FAIL,\r\n\tPRODUCT_SAVE_DETAIL\r\n} from '../constants/productConstants';\r\n\r\nconst saveFarmDetail = (data) => (dispatch) => {\r\n\tdispatch({ type: PRODUCT_SAVE_DETAIL, payload: data });\r\n};\r\n\r\nconst verify = (code) => async (dispatch, getState) => {\r\n\tdispatch({ type: PRODUCT_VERIFY_REQUEST, payload: { code } });\r\n  const {\r\n    userSignin: { userInfo },\r\n\t\tfarmPackage: { farmInfo }\r\n\t} = getState();\r\n  let farmId = farmInfo._id\r\n\ttry {\r\n\t\tconst { data } = await Axios.post(\r\n\t\t\t'/api/user/verify-product',\r\n\t\t\t{ code, farmId },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: 'Bearer ' + userInfo.token\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\tdispatch({ type: PRODUCT_VERIFY_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message ? error.response.data.message : error.message;\r\n\t\tdispatch({ type: PRODUCT_VERIFY_FAIL, payload: message });\r\n\t}\r\n};\r\n\r\nexport { verify, saveFarmDetail };\r\n"]},"metadata":{},"sourceType":"module"}