{"ast":null,"code":"/** @format */\nimport Axios from 'axios';\nimport { PRODUCT_ADD_REQUEST, PRODUCT_ADD_SUCCESS, PRODUCT_ADD_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, USERS_LIST_REQUEST, USERS_LIST_SUCCESS, USERS_LIST_FAIL, USED_PRODUCT_LIST_REQUEST, USED_PRODUCT_LIST_SUCCESS, USED_PRODUCT_LIST_FAIL, USER_DETAILS_REQUEST } from '../constants/adminConstants';\n\nconst addProduct = (productName, batchNumber, serialNumber, point) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_ADD_REQUEST,\n    payload: {\n      productName,\n      batchNumber,\n      serialNumber,\n      point\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/admin/code-generator', {\n      productName,\n      batchNumber,\n      serialNumber,\n      point\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_ADD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_ADD_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listProducts = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/admin/products', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: message\n    });\n  }\n};\n\nconst listUsedProducts = () => async (dispatch, getState) => {\n  dispatch({\n    type: USED_PRODUCT_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/admin/used_product', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USED_PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USED_PRODUCT_LIST_FAIL,\n      payload: message\n    });\n  }\n};\n\nconst listUsers = () => async (dispatch, getState) => {\n  dispatch({\n    type: USERS_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/admin/users', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USERS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USERS_LIST_FAIL,\n      payload: message\n    });\n  }\n};\n\nconst userDetails = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/admin/' + userId, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { addProduct, listProducts, listUsers, userDetails, listUsedProducts };","map":{"version":3,"sources":["/Users/apple/Downloads/React-verification-system/client/src/actions/adminActions.js"],"names":["Axios","PRODUCT_ADD_REQUEST","PRODUCT_ADD_SUCCESS","PRODUCT_ADD_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_FAIL","PRODUCT_LIST_SUCCESS","USERS_LIST_REQUEST","USERS_LIST_SUCCESS","USERS_LIST_FAIL","USED_PRODUCT_LIST_REQUEST","USED_PRODUCT_LIST_SUCCESS","USED_PRODUCT_LIST_FAIL","USER_DETAILS_REQUEST","addProduct","productName","batchNumber","serialNumber","point","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","error","message","listProducts","get","response","listUsedProducts","listUsers","userDetails","userId","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL"],"mappings":"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","sourcesContent":["/** @format */\n\nimport Axios from 'axios';\nimport {\n\tPRODUCT_ADD_REQUEST,\n\tPRODUCT_ADD_SUCCESS,\n\tPRODUCT_ADD_FAIL,\n\tPRODUCT_LIST_REQUEST,\n\tPRODUCT_LIST_FAIL,\n\tPRODUCT_LIST_SUCCESS,\n\tUSERS_LIST_REQUEST,\n\tUSERS_LIST_SUCCESS,\n\tUSERS_LIST_FAIL,\n\tUSED_PRODUCT_LIST_REQUEST,\n\tUSED_PRODUCT_LIST_SUCCESS,\n\tUSED_PRODUCT_LIST_FAIL,\n\tUSER_DETAILS_REQUEST\n} from '../constants/adminConstants';\n\nconst addProduct = (productName, batchNumber, serialNumber, point) => async (dispatch, getState) => {\n\tdispatch({\n\t\ttype: PRODUCT_ADD_REQUEST,\n\t\tpayload: { productName, batchNumber, serialNumber, point }\n\t});\n\tconst {\n\t\tuserSignin: { userInfo }\n\t} = getState();\n\ttry {\n\t\tconst { data } = await Axios.post(\n\t\t\t'/api/admin/code-generator',\n\t\t\t{ productName, batchNumber, serialNumber, point },\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: 'Bearer ' + userInfo.token\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tdispatch({ type: PRODUCT_ADD_SUCCESS, payload: data });\n\t} catch (error) {\n\t\tdispatch({ type: PRODUCT_ADD_FAIL, payload: error.message });\n\t}\n};\n\nconst listProducts = () => async (dispatch, getState) => {\n\tdispatch({ type: PRODUCT_LIST_REQUEST });\n\tconst {\n\t\tuserSignin: { userInfo }\n\t} = getState();\n\ttry {\n\t\tconst { data } = await Axios.get('/api/admin/products', {\n\t\t\theaders: { Authorization: `Bearer ${userInfo.token}` }\n\t\t});\n\t\tdispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n\t} catch (error) {\n\t\tconst message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\t\tdispatch({ type: PRODUCT_LIST_FAIL, payload: message });\n\t}\n};\n\nconst listUsedProducts = () => async (dispatch, getState) => {\n\tdispatch({ type: USED_PRODUCT_LIST_REQUEST });\n\tconst {\n\t\tuserSignin: { userInfo }\n\t} = getState();\n\ttry {\n\t\tconst { data } = await Axios.get('/api/admin/used_product', {\n\t\t\theaders: { Authorization: `Bearer ${userInfo.token}` }\n\t\t});\n\t\tdispatch({ type: USED_PRODUCT_LIST_SUCCESS, payload: data });\n\t} catch (error) {\n\t\tconst message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\t\tdispatch({ type: USED_PRODUCT_LIST_FAIL, payload: message });\n\t}\n};\n\nconst listUsers = () => async (dispatch, getState) => {\n\tdispatch({ type: USERS_LIST_REQUEST });\n\tconst {\n\t\tuserSignin: { userInfo }\n\t} = getState();\n\ttry {\n\t\tconst { data } = await Axios.get('/api/admin/users', {\n\t\t\theaders: { Authorization: `Bearer ${userInfo.token}` }\n\t\t});\n\t\tdispatch({ type: USERS_LIST_SUCCESS, payload: data });\n\t} catch (error) {\n\t\tconst message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\t\tdispatch({ type: USERS_LIST_FAIL, payload: message });\n\t}\n};\n\nconst userDetails = (userId) => async (dispatch, getState) => {\n\tdispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n\tconst {\n\t\tuserSignin: { userInfo }\n\t} = getState();\n\ttry {\n\t\tconst { data } = await Axios.get('/api/admin/' + userId, {\n\t\t\theaders: { Authorization: `Bearer ${userInfo.token}` }\n\t\t});\n\t\tdispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n\t} catch (error) {\n\t\tdispatch({ type: USER_DETAILS_FAIL, payload: error.message });\n\t}\n};\n\nexport { addProduct, listProducts, listUsers, userDetails, listUsedProducts };\n"]},"metadata":{},"sourceType":"module"}