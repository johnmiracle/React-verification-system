{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/apple/Downloads/React-verification-system/client/src/pages/QRscanner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Fab } from \"@material-ui/core\";\nimport { ArrowBack } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport QrScan from \"react-qr-reader\";\nimport { verify } from \"../actions/productActions\";\n\nfunction QRscanner(props) {\n  _s();\n\n  const productVerify = useSelector(state => state.productVerify);\n  const {\n    loading,\n    success: successfulVerify,\n    error\n  } = productVerify;\n  const dispatch = useDispatch();\n\n  const handleScan = code => {\n    if (code) {\n      dispatch(verify(code));\n    }\n  };\n\n  const handleError = err => {\n    console.error(err);\n  };\n\n  useEffect(() => {\n    if (successfulVerify) {\n      let redirect = \"/result\";\n      props.history.push(redirect);\n    }\n\n    if (error) {\n      let redirect = \"/result_fail\";\n      props.history.push(redirect);\n    }\n\n    return () => {//\n    };\n  }, [successfulVerify, error]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 48\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QRscanner, \"ALj24tod8YpmzjFukBDyzkbhJ50=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = QRscanner;\nexport default QRscanner;\n\nvar _c;\n\n$RefreshReg$(_c, \"QRscanner\");","map":{"version":3,"sources":["/Users/apple/Downloads/React-verification-system/client/src/pages/QRscanner.js"],"names":["React","useEffect","useDispatch","useSelector","Fab","ArrowBack","Link","QrScan","verify","QRscanner","props","productVerify","state","loading","success","successfulVerify","error","dispatch","handleScan","code","handleError","err","console","redirect","history","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,MAAT,QAAuB,2BAAvB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAMC,aAAa,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,aAAlB,CAAjC;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,OAAO,EAAEC,gBAApB;AAAsCC,IAAAA;AAAtC,MAAgDL,aAAtD;AAEA,QAAMM,QAAQ,GAAGf,WAAW,EAA5B;;AACA,QAAMgB,UAAU,GAAIC,IAAD,IAAU;AAC3B,QAAIA,IAAJ,EAAU;AACRF,MAAAA,QAAQ,CAACT,MAAM,CAACW,IAAD,CAAP,CAAR;AACD;AACF,GAJD;;AAKA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3BC,IAAAA,OAAO,CAACN,KAAR,CAAcK,GAAd;AACD,GAFD;;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,gBAAJ,EAAsB;AACpB,UAAIQ,QAAQ,GAAG,SAAf;AACAb,MAAAA,KAAK,CAACc,OAAN,CAAcC,IAAd,CAAmBF,QAAnB;AACD;;AACD,QAAIP,KAAJ,EAAW;AACT,UAAIO,QAAQ,GAAG,cAAf;AACAb,MAAAA,KAAK,CAACc,OAAN,CAAcC,IAAd,CAAmBF,QAAnB;AACD;;AACD,WAAO,MAAM,CACX;AACD,KAFD;AAGD,GAZQ,EAYN,CAACR,gBAAD,EAAmBC,KAAnB,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cAEIH,OAAO,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAgC;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAF3C;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GApCQJ,S;UACeN,W,EAGLD,W;;;KAJVO,S;AAsCT,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Fab } from \"@material-ui/core\";\nimport { ArrowBack } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport QrScan from \"react-qr-reader\";\nimport { verify } from \"../actions/productActions\";\n\nfunction QRscanner(props) {\n  const productVerify = useSelector((state) => state.productVerify);\n  const { loading, success: successfulVerify, error } = productVerify;\n\n  const dispatch = useDispatch();\n  const handleScan = (code) => {\n    if (code) {\n      dispatch(verify(code));\n    }\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  useEffect(() => {\n    if (successfulVerify) {\n      let redirect = \"/result\";\n      props.history.push(redirect);\n    }\n    if (error) {\n      let redirect = \"/result_fail\";\n      props.history.push(redirect);\n    }\n    return () => {\n      //\n    };\n  }, [successfulVerify, error]);\n\n  return (\n    <div className=\"container\">\n      {\n        loading ? <LoadingBox></LoadingBox> :  <div className=\"\"></div>\n      }\n     \n    </div>\n  );\n}\n\nexport default QRscanner;\n"]},"metadata":{},"sourceType":"module"}