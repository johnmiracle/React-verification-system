{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/apple/Downloads/React-verification-system/client/src/pages/QRscanner.js\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Fab } from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport QrScan from 'react-qr-reader';\nimport { verify } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\nimport CodeScanner from 'react-code-scanner';\n\nfunction QRscanner(props) {\n  _s();\n\n  const [result, setResult] = useState('');\n  const productVerify = useSelector(state => state.productVerify);\n  const [facingMode, setFacingMode] = useState('environment');\n  const {\n    loading,\n    success: successfulVerify,\n    error\n  } = productVerify;\n  const dispatch = useDispatch();\n\n  const handleScan = code => {\n    if (code) {\n      dispatch(verify(code));\n    }\n  };\n\n  const handleError = err => {\n    console.error(err);\n  };\n\n  useEffect(() => {\n    if (successfulVerify) {\n      let redirect = '/result';\n      props.history.push(redirect);\n    }\n\n    if (error) {\n      let redirect = '/result_fail';\n      props.history.push(redirect);\n    }\n\n    return () => {//\n    };\n  }, [successfulVerify, error, props.history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Code Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Result: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setResult(''),\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFacingMode(facingMode === 'environment' ? 'user' : 'environment'),\n          children: [\"current camera: \", facingMode, \" switch camera\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(CodeScanner, {\n        onResult: res => setResult(res.map(({\n          value\n        }) => value).join(', ')),\n        onError: setResult,\n        facingMode: facingMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this) // <div className=\"container\">\n    // \t<div className=\"row\">\n    // \t\t<div className=\"col-md-6 mt-4\">\n    // \t\t\t<Link to=\"/product_verify\">\n    // \t\t\t\t<Fab style={{ marginRight: 10 }} color=\"primary\">\n    // \t\t\t\t\t<ArrowBack />\n    // \t\t\t\t</Fab>\n    // \t\t\t</Link>\n    // \t\t</div>\n    // \t\t<div className=\"col-md-6 mt-4\">\n    // \t\t\t{/* <center>\n    // \t\t\t\t<button\n    // \t\t\t\t\tclassName=\"btn btn-primary\"\n    // \t\t\t\t\tonClick={() => setFacingMode(facingMode === 'rear' ? 'front' : 'rear')}\n    // \t\t\t\t>\n    // \t\t\t\t\tcurrent camera: {facingMode} switch camera\n    // \t\t\t\t</button>\n    // \t\t\t</center> */}\n    // \t\t\t<select\n    // \t\t\t\tclassName=\"custom-select\"\n    // \t\t\t\tid=\"inputGroupSelect01\"\n    // \t\t\t\tonChange={(e) => setFacingMode({ facingMode: e.target.value })}\n    // \t\t\t>\n    // \t\t\t\t<option value=\"user\">User</option>\n    // \t\t\t\t<option value=\"environment\">Environment</option>\n    // \t\t\t</select>\n    // \t\t</div>\n    // \t</div>\n    // \t<div className=\"row mt-5\">\n    // \t\t<div className=\"col-md-3\"></div>\n    // \t\t<div className=\"col-md-6\">\n    // \t\t\t<center>\n    // \t\t\t\t<span>QR Scanner</span>\n    // \t\t\t\t<div style={{ marginTop: 30, marginBottom: 40 }}>\n    // \t\t\t\t\t{\n    // \t\t\t\t\t\t<QrScan\n    // \t\t\t\t\t\t\tdelay={300}\n    // \t\t\t\t\t\t\t// facingMode={facingMode === 'environment' ? 'user' : 'environment'}\n    // \t\t\t\t\t\t\tfacingMode={facingMode}\n    // \t\t\t\t\t\t\tonError={handleError}\n    // \t\t\t\t\t\t\tonScan={handleScan}\n    // \t\t\t\t\t\t\tstyle={{ height: 240, width: 320 }}\n    // \t\t\t\t\t\t/>\n    // \t\t\t\t\t}\n    // \t\t\t\t</div>\n    // \t\t\t</center>\n    // \t\t</div>\n    // \t\t<div className=\"col-md-3\"></div>\n    // \t</div>\n    // </div>\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n}\n\n_s(QRscanner, \"5igb8hf0LYYx58J6Wb6H23AxBBo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = QRscanner;\nexport default QRscanner;\n\nvar _c;\n\n$RefreshReg$(_c, \"QRscanner\");","map":{"version":3,"sources":["/Users/apple/Downloads/React-verification-system/client/src/pages/QRscanner.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Fab","ArrowBack","Link","QrScan","verify","LoadingBox","CodeScanner","QRscanner","props","result","setResult","productVerify","state","facingMode","setFacingMode","loading","success","successfulVerify","error","dispatch","handleScan","code","handleError","err","console","redirect","history","push","res","map","value","join"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Fab } from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport QrScan from 'react-qr-reader';\nimport { verify } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\nimport CodeScanner from 'react-code-scanner';\n\nfunction QRscanner(props) {\n\tconst [result, setResult] = useState('');\n\tconst productVerify = useSelector((state) => state.productVerify);\n\tconst [facingMode, setFacingMode] = useState('environment');\n\tconst { loading, success: successfulVerify, error } = productVerify;\n\n\tconst dispatch = useDispatch();\n\tconst handleScan = (code) => {\n\t\tif (code) {\n\t\t\tdispatch(verify(code));\n\t\t}\n\t};\n\tconst handleError = (err) => {\n\t\tconsole.error(err);\n\t};\n\n\tuseEffect(() => {\n\t\tif (successfulVerify) {\n\t\t\tlet redirect = '/result';\n\t\t\tprops.history.push(redirect);\n\t\t}\n\t\tif (error) {\n\t\t\tlet redirect = '/result_fail';\n\t\t\tprops.history.push(redirect);\n\t\t}\n\t\treturn () => {\n\t\t\t//\n\t\t};\n\t}, [successfulVerify, error, props.history]);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t{loading ? (\n\t\t\t\t<LoadingBox></LoadingBox>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Code Scanner</h1>\n\t\t\t\t\t<div>Result: {result}</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button onClick={() => setResult('')}>reset</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tsetFacingMode(facingMode === 'environment' ? 'user' : 'environment')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tcurrent camera: {facingMode} switch camera\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CodeScanner\n\t\t\t\t\t\tonResult={(res) => setResult(res.map(({ value }) => value).join(', '))}\n\t\t\t\t\t\tonError={setResult}\n\t\t\t\t\t\tfacingMode={facingMode}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t// <div className=\"container\">\n\t\t\t\t// \t<div className=\"row\">\n\t\t\t\t// \t\t<div className=\"col-md-6 mt-4\">\n\t\t\t\t// \t\t\t<Link to=\"/product_verify\">\n\t\t\t\t// \t\t\t\t<Fab style={{ marginRight: 10 }} color=\"primary\">\n\t\t\t\t// \t\t\t\t\t<ArrowBack />\n\t\t\t\t// \t\t\t\t</Fab>\n\t\t\t\t// \t\t\t</Link>\n\t\t\t\t// \t\t</div>\n\t\t\t\t// \t\t<div className=\"col-md-6 mt-4\">\n\t\t\t\t// \t\t\t{/* <center>\n\t\t\t\t// \t\t\t\t<button\n\t\t\t\t// \t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t// \t\t\t\t\tonClick={() => setFacingMode(facingMode === 'rear' ? 'front' : 'rear')}\n\t\t\t\t// \t\t\t\t>\n\t\t\t\t// \t\t\t\t\tcurrent camera: {facingMode} switch camera\n\t\t\t\t// \t\t\t\t</button>\n\t\t\t\t// \t\t\t</center> */}\n\n\t\t\t\t// \t\t\t<select\n\t\t\t\t// \t\t\t\tclassName=\"custom-select\"\n\t\t\t\t// \t\t\t\tid=\"inputGroupSelect01\"\n\t\t\t\t// \t\t\t\tonChange={(e) => setFacingMode({ facingMode: e.target.value })}\n\t\t\t\t// \t\t\t>\n\t\t\t\t// \t\t\t\t<option value=\"user\">User</option>\n\t\t\t\t// \t\t\t\t<option value=\"environment\">Environment</option>\n\t\t\t\t// \t\t\t</select>\n\t\t\t\t// \t\t</div>\n\t\t\t\t// \t</div>\n\t\t\t\t// \t<div className=\"row mt-5\">\n\t\t\t\t// \t\t<div className=\"col-md-3\"></div>\n\t\t\t\t// \t\t<div className=\"col-md-6\">\n\t\t\t\t// \t\t\t<center>\n\t\t\t\t// \t\t\t\t<span>QR Scanner</span>\n\n\t\t\t\t// \t\t\t\t<div style={{ marginTop: 30, marginBottom: 40 }}>\n\t\t\t\t// \t\t\t\t\t{\n\t\t\t\t// \t\t\t\t\t\t<QrScan\n\t\t\t\t// \t\t\t\t\t\t\tdelay={300}\n\t\t\t\t// \t\t\t\t\t\t\t// facingMode={facingMode === 'environment' ? 'user' : 'environment'}\n\t\t\t\t// \t\t\t\t\t\t\tfacingMode={facingMode}\n\t\t\t\t// \t\t\t\t\t\t\tonError={handleError}\n\t\t\t\t// \t\t\t\t\t\t\tonScan={handleScan}\n\t\t\t\t// \t\t\t\t\t\t\tstyle={{ height: 240, width: 320 }}\n\t\t\t\t// \t\t\t\t\t\t/>\n\t\t\t\t// \t\t\t\t\t}\n\t\t\t\t// \t\t\t\t</div>\n\t\t\t\t// \t\t\t</center>\n\t\t\t\t// \t\t</div>\n\t\t\t\t// \t\t<div className=\"col-md-3\"></div>\n\t\t\t\t// \t</div>\n\t\t\t\t// </div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default QRscanner;\n"]},"metadata":{},"sourceType":"module"}