{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_HISTORY_REQUEST, USER_HISTORY_SUCCESS, USER_HISTORY_FAIL } from \"../constants/userConstants\";\n\nconst signin = (phone, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      phone,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/login\", {\n      phone,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookies.set(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\nconst logout = () => dispatch => {\n  Cookies.remove(\"userInfo\");\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\n\nconst register = (firstName, lastName, phone, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      firstName,\n      lastName,\n      phone,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/register\", {\n      firstName,\n      lastName,\n      phone,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookies.set(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\nconst listHistoryMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: USER_HISTORY_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/user/history\", {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_HISTORY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_HISTORY_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signin, register, logout, listHistoryMine };","map":{"version":3,"sources":["/Users/apple/Downloads/React-QR-Generator-Scanner-master/client/src/actions/userActions.js"],"names":["axios","Cookies","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_HISTORY_REQUEST","USER_HISTORY_SUCCESS","USER_HISTORY_FAIL","signin","phone","password","dispatch","type","payload","data","post","set","JSON","stringify","error","response","message","logout","remove","register","firstName","lastName","listHistoryMine","getState","userSignin","userInfo","get","headers","Authorization","token"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_HISTORY_REQUEST,\r\n  USER_HISTORY_SUCCESS,\r\n  USER_HISTORY_FAIL,\r\n} from \"../constants/userConstants\";\r\n\r\nconst signin = (phone, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { phone, password } });\r\n  try {\r\n    const { data } = await axios.post(\"/api/login\", { phone, password });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    Cookies.set(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SIGNIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst logout = () => (dispatch) => {\r\n  Cookies.remove(\"userInfo\");\r\n  dispatch({ type: USER_SIGNOUT });\r\n};\r\n\r\nconst register = (firstName, lastName, phone, password) => async (dispatch) => {\r\n  dispatch({\r\n    type: USER_REGISTER_REQUEST,\r\n    payload: { firstName, lastName, phone, password },\r\n  });\r\n  try {\r\n    const { data } = await axios.post(\"/api/register\", {\r\n      firstName,\r\n      lastName,\r\n      phone,\r\n      password,\r\n    });\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    Cookies.set(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nconst listHistoryMine = () => async (dispatch, getState) => {\r\n  dispatch({ type: USER_HISTORY_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await axios.get(\"/api/user/history\", {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: USER_HISTORY_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: USER_HISTORY_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport { signin, register, logout, listHistoryMine };\r\n"]},"metadata":{},"sourceType":"module"}