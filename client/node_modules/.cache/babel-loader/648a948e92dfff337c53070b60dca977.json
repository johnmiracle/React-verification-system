{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_ADD_REQUEST, PRODUCT_ADD_SUCCESS, PRODUCT_ADD_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, USERS_LIST_REQUEST, USERS_LIST_SUCCESS, USERS_LIST_FAIL } from \"../constants/adminConstants\";\n\nconst addProduct = (productName, batchNumber, serialNumber, point) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_ADD_REQUEST,\n    payload: {\n      productName,\n      batchNumber,\n      serialNumber,\n      point\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/admin/code-generator\", {\n      productName,\n      batchNumber,\n      serialNumber,\n      point\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_ADD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_ADD_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listProducts = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"/api/admin/products\", {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: message\n    });\n  }\n};\n\nconst listUsedProducts = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/admin/products', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: message\n    });\n  }\n};\n\nconst listUsers = () => async (dispatch, getState) => {\n  dispatch({\n    type: USERS_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"/api/admin/users\", {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USERS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USERS_LIST_FAIL,\n      payload: message\n    });\n  }\n};\n\nexport { addProduct, listProducts, listUsers, listUsedProducts };","map":{"version":3,"sources":["/Users/apple/Downloads/React-verification-system/client/src/actions/adminActions.js"],"names":["Axios","PRODUCT_ADD_REQUEST","PRODUCT_ADD_SUCCESS","PRODUCT_ADD_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_FAIL","PRODUCT_LIST_SUCCESS","USERS_LIST_REQUEST","USERS_LIST_SUCCESS","USERS_LIST_FAIL","addProduct","productName","batchNumber","serialNumber","point","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","error","message","listProducts","get","response","listUsedProducts","listUsers"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n  PRODUCT_ADD_REQUEST,\n  PRODUCT_ADD_SUCCESS,\n  PRODUCT_ADD_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_SUCCESS,\n  USERS_LIST_REQUEST,\n  USERS_LIST_SUCCESS,\n  USERS_LIST_FAIL,\n} from \"../constants/adminConstants\";\n\nconst addProduct = (productName, batchNumber, serialNumber, point) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: PRODUCT_ADD_REQUEST,\n    payload: { productName, batchNumber, serialNumber, point },\n  });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      \"/api/admin/code-generator\",\n      { productName, batchNumber, serialNumber, point },\n      {\n        headers: {\n          Authorization: \"Bearer \" + userInfo.token,\n        },\n      }\n    );\n    dispatch({ type: PRODUCT_ADD_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_ADD_FAIL, payload: error.message });\n  }\n};\n\nconst listProducts = () => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_LIST_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get(\"/api/admin/products\", {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: message });\n  }\n};\n\nconst listUsedProducts = () => async (dispatch, getState) => {\n\tdispatch({ type: PRODUCT_LIST_REQUEST });\n\tconst {\n\t\tuserSignin: { userInfo }\n\t} = getState();\n\ttry {\n\t\tconst { data } = await Axios.get('/api/admin/products', {\n\t\t\theaders: { Authorization: `Bearer ${userInfo.token}` }\n\t\t});\n\t\tdispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n\t} catch (error) {\n\t\tconst message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\t\tdispatch({ type: PRODUCT_LIST_FAIL, payload: message });\n\t}\n};\n\nconst listUsers = () => async (dispatch, getState) => {\n  dispatch({ type: USERS_LIST_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get(\"/api/admin/users\", {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: USERS_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USERS_LIST_FAIL, payload: message });\n  }\n};\n\nexport { addProduct, listProducts, listUsers, listUsedProducts };\n"]},"metadata":{},"sourceType":"module"}