{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Downloads/React-verification-system/client/src/pages/QRscanner.js\";\n\n/** @format */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Fab } from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport QrScan from 'react-qr-reader';\nimport { verify } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox'; // function QRscanner(props) {\n// \tconst productVerify = useSelector((state) => state.productVerify);\n// \tconst [facingMode, setFacingMode] = useState('rear');\n// \tconst { loading, success: successfulVerify, error } = productVerify;\n// \tconst dispatch = useDispatch();\n// \tconst handleScan = (code) => {\n// \t\tif (code) {\n// \t\t\tdispatch(verify(code));\n// \t\t}\n// \t};\n// \tconst handleError = (err) => {\n// \t\tconsole.error(err);\n// \t};\n// \tuseEffect(() => {\n// \t\tif (successfulVerify) {\n// \t\t\tlet redirect = '/result';\n// \t\t\tprops.history.push(redirect);\n// \t\t}\n// \t\tif (error) {\n// \t\t\tlet redirect = '/result_fail';\n// \t\t\tprops.history.push(redirect);\n// \t\t}\n// \t\treturn () => {\n// \t\t\t//\n// \t\t};\n// \t}, [successfulVerify, error, props.history]);\n// \treturn (\n// \t\t<div className=\"container\">\n// \t\t\t{loading ? (\n// \t\t\t\t<LoadingBox></LoadingBox>\n// \t\t\t) : (\n// \t\t\t\t<div className=\"container\">\n// \t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t<div className=\"col-md-6 mt-4\">\n// \t\t\t\t\t\t\t<Link to=\"/product_verify\">\n// \t\t\t\t\t\t\t\t<Fab style={{ marginRight: 10 }} color=\"primary\">\n// \t\t\t\t\t\t\t\t\t<ArrowBack />\n// \t\t\t\t\t\t\t\t</Fab>\n// \t\t\t\t\t\t\t</Link>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"col-md-6 mt-4\">\n// \t\t\t\t\t\t\t<center>\n// \t\t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n// \t\t\t\t\t\t\t\t\tonClick={() => setFacingMode(facingMode === 'rear' ? 'front' : 'rear')}\n// \t\t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t\tcurrent camera: {facingMode} switch camera\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t</center>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"row mt-5\">\n// \t\t\t\t\t\t<div className=\"col-md-3\"></div>\n// \t\t\t\t\t\t<div className=\"col-md-6\">\n// \t\t\t\t\t\t\t<center>\n// \t\t\t\t\t\t\t\t<span>QR Scanner</span>\n// \t\t\t\t\t\t\t\t<div style={{ marginTop: 30, marginBottom: 40 }}>\n// \t\t\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t\t\t<QrScan\n// \t\t\t\t\t\t\t\t\t\t\tdelay={300}\n// \t\t\t\t\t\t\t\t\t\t\tfacingMode={facingMode === 'environment' ? 'user' : 'environment'}\n// \t\t\t\t\t\t\t\t\t\t\tonError={handleError}\n// \t\t\t\t\t\t\t\t\t\t\tonScan={handleScan}\n// \t\t\t\t\t\t\t\t\t\t\tstyle={{ height: 240, width: 320 }}\n// \t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t</center>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"col-md-3\"></div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t)}\n// \t\t</div>\n// \t);\n// }\n\nclass QRscanner extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      facingMode: 'user',\n      delay: 500,\n      on: true\n    };\n  }\n\n  render() {\n    const {\n      selectFacingMode,\n      selectDelay,\n      legacyMode,\n      onAndOff\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '400px',\n        margin: 'auto'\n      },\n      children: [onAndOff && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.setState({\n          on: !this.state.on\n        }),\n        children: this.state.on ? 'Turn off' : 'Turn on'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }, this), selectFacingMode && /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => this.setState({\n          facingMode: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"environment\",\n          children: \"Environment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 6\n      }, this), selectDelay && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setState({\n            delay: false\n          }),\n          children: \"Disable Delay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Delay in ms\",\n          type: \"number\",\n          value: this.state.delay,\n          onChange: e => this.setState({\n            delay: parseInt(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }, this), this.state.on && /*#__PURE__*/_jsxDEV(Reader, {\n        onError: action('Error'),\n        onScan: action('Scan'),\n        onLoad: action('Load'),\n        onImageLoad: action('ImageLoad'),\n        ref: \"reader\",\n        facingMode: this.state.facingMode,\n        legacyMode: legacyMode,\n        maxImageSize: 1000,\n        delay: this.state.delay,\n        className: \"reader-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 6\n      }, this), legacyMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.refs.reader.openImageDialog(),\n        children: \"Open Image Dialog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default QRscanner;","map":{"version":3,"sources":["/Users/apple/Downloads/React-verification-system/client/src/pages/QRscanner.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Fab","ArrowBack","Link","QrScan","verify","LoadingBox","QRscanner","Component","constructor","props","state","facingMode","delay","on","render","selectFacingMode","selectDelay","legacyMode","onAndOff","width","margin","setState","e","target","value","parseInt","action","refs","reader","openImageDialog"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Fab } from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport QrScan from 'react-qr-reader';\nimport { verify } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\n\n// function QRscanner(props) {\n// \tconst productVerify = useSelector((state) => state.productVerify);\n// \tconst [facingMode, setFacingMode] = useState('rear');\n// \tconst { loading, success: successfulVerify, error } = productVerify;\n\n// \tconst dispatch = useDispatch();\n// \tconst handleScan = (code) => {\n// \t\tif (code) {\n// \t\t\tdispatch(verify(code));\n// \t\t}\n// \t};\n// \tconst handleError = (err) => {\n// \t\tconsole.error(err);\n// \t};\n\n// \tuseEffect(() => {\n// \t\tif (successfulVerify) {\n// \t\t\tlet redirect = '/result';\n// \t\t\tprops.history.push(redirect);\n// \t\t}\n// \t\tif (error) {\n// \t\t\tlet redirect = '/result_fail';\n// \t\t\tprops.history.push(redirect);\n// \t\t}\n// \t\treturn () => {\n// \t\t\t//\n// \t\t};\n// \t}, [successfulVerify, error, props.history]);\n\n// \treturn (\n// \t\t<div className=\"container\">\n// \t\t\t{loading ? (\n// \t\t\t\t<LoadingBox></LoadingBox>\n// \t\t\t) : (\n// \t\t\t\t<div className=\"container\">\n// \t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t<div className=\"col-md-6 mt-4\">\n// \t\t\t\t\t\t\t<Link to=\"/product_verify\">\n// \t\t\t\t\t\t\t\t<Fab style={{ marginRight: 10 }} color=\"primary\">\n// \t\t\t\t\t\t\t\t\t<ArrowBack />\n// \t\t\t\t\t\t\t\t</Fab>\n// \t\t\t\t\t\t\t</Link>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"col-md-6 mt-4\">\n// \t\t\t\t\t\t\t<center>\n// \t\t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n// \t\t\t\t\t\t\t\t\tonClick={() => setFacingMode(facingMode === 'rear' ? 'front' : 'rear')}\n// \t\t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t\tcurrent camera: {facingMode} switch camera\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t</center>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"row mt-5\">\n// \t\t\t\t\t\t<div className=\"col-md-3\"></div>\n// \t\t\t\t\t\t<div className=\"col-md-6\">\n// \t\t\t\t\t\t\t<center>\n// \t\t\t\t\t\t\t\t<span>QR Scanner</span>\n\n// \t\t\t\t\t\t\t\t<div style={{ marginTop: 30, marginBottom: 40 }}>\n// \t\t\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t\t\t<QrScan\n// \t\t\t\t\t\t\t\t\t\t\tdelay={300}\n// \t\t\t\t\t\t\t\t\t\t\tfacingMode={facingMode === 'environment' ? 'user' : 'environment'}\n// \t\t\t\t\t\t\t\t\t\t\tonError={handleError}\n// \t\t\t\t\t\t\t\t\t\t\tonScan={handleScan}\n// \t\t\t\t\t\t\t\t\t\t\tstyle={{ height: 240, width: 320 }}\n// \t\t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t</center>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"col-md-3\"></div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t)}\n// \t\t</div>\n// \t);\n// }\n\nclass QRscanner extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { facingMode: 'user', delay: 500, on: true };\n\t}\n\trender() {\n\t\tconst { selectFacingMode, selectDelay, legacyMode, onAndOff } = this.props;\n\n\t\treturn (\n\t\t\t<div style={{ width: '400px', margin: 'auto' }}>\n\t\t\t\t{onAndOff && (\n\t\t\t\t\t<button onClick={() => this.setState({ on: !this.state.on })}>\n\t\t\t\t\t\t{this.state.on ? 'Turn off' : 'Turn on'}\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{selectFacingMode && (\n\t\t\t\t\t<select onChange={(e) => this.setState({ facingMode: e.target.value })}>\n\t\t\t\t\t\t<option value=\"user\">User</option>\n\t\t\t\t\t\t<option value=\"environment\">Environment</option>\n\t\t\t\t\t</select>\n\t\t\t\t)}\n\t\t\t\t{selectDelay && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button onClick={() => this.setState({ delay: false })}>Disable Delay</button>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tplaceholder=\"Delay in ms\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tvalue={this.state.delay}\n\t\t\t\t\t\t\tonChange={(e) => this.setState({ delay: parseInt(e.target.value) })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{this.state.on && (\n\t\t\t\t\t<Reader\n\t\t\t\t\t\tonError={action('Error')}\n\t\t\t\t\t\tonScan={action('Scan')}\n\t\t\t\t\t\tonLoad={action('Load')}\n\t\t\t\t\t\tonImageLoad={action('ImageLoad')}\n\t\t\t\t\t\tref=\"reader\"\n\t\t\t\t\t\tfacingMode={this.state.facingMode}\n\t\t\t\t\t\tlegacyMode={legacyMode}\n\t\t\t\t\t\tmaxImageSize={1000}\n\t\t\t\t\t\tdelay={this.state.delay}\n\t\t\t\t\t\tclassName=\"reader-container\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{legacyMode && (\n\t\t\t\t\t<button onClick={() => this.refs.reader.openImageDialog()}>Open Image Dialog</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default QRscanner;\n"]},"metadata":{},"sourceType":"module"}