{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/apple/Downloads/React-verification-system/client/src/pages/CropImage.js\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\n\nfunction CropDemo({\n  src\n}) {\n  _s();\n\n  const [upImg, setUpImg] = useState();\n  const imgRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const [crop, setCrop] = useState({\n    unit: '%',\n    width: 30,\n    aspect: 16 / 9\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  const onSelectFile = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }; // As a blob\n\n\n  new Promise((resolve, reject) => {\n    canvas.toBlob(blob => {\n      blob.name = fileName;\n      resolve(blob);\n    }, 'image/jpeg', 1);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n      src: \"https://blog.intercomassets.com/blog/wp-content/uploads/2018/05/Design-leadership-as-a-subversive-activity-.png\",\n      crop: crop,\n      onChange: newCrop => setCrop(newCrop) // onImageLoaded={onImageLoaded}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"\",\n      alt: true,\n      src: crop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CropDemo, \"wddpVJg5FmCMdNNFqo34/Gjx77w=\");\n\n_c = CropDemo;\nexport default CropDemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CropDemo\");","map":{"version":3,"sources":["/Users/apple/Downloads/React-verification-system/client/src/pages/CropImage.js"],"names":["React","useState","ReactCrop","CropDemo","src","upImg","setUpImg","imgRef","useRef","previewCanvasRef","crop","setCrop","unit","width","aspect","completedCrop","setCompletedCrop","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","Promise","resolve","reject","canvas","toBlob","blob","name","fileName","newCrop"],"mappings":";;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAO,qCAAP;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA2B;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AACA,QAAMM,MAAM,GAAGC,MAAM,CAAC,IAAD,CAArB;AACA,QAAMC,gBAAgB,GAAGD,MAAM,CAAC,IAAD,CAA/B;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAAEW,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE,EAApB;AAAwBC,IAAAA,MAAM,EAAE,KAAK;AAArC,GAAD,CAAhC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMgB,YAAY,GAAIC,CAAD,IAAO;AAC3B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkBF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAA9C,EAAiD;AAChD,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAMlB,QAAQ,CAACgB,MAAM,CAACG,MAAR,CAA9C;AACAH,MAAAA,MAAM,CAACI,aAAP,CAAqBR,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAArB;AACA;AACD,GAND,CAP0B,CAe1B;;;AACA,MAAIO,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChCC,IAAAA,MAAM,CAACC,MAAP,CACEC,IAAD,IAAU;AACTA,MAAAA,IAAI,CAACC,IAAL,GAAYC,QAAZ;AACAN,MAAAA,OAAO,CAACI,IAAD,CAAP;AACA,KAJF,EAKC,YALD,EAMC,CAND;AAQA,GATD;AAWA,sBACC;AAAA,4BACC,QAAC,SAAD;AACC,MAAA,GAAG,EAAC,iHADL;AAEC,MAAA,IAAI,EAAEtB,IAFP;AAGC,MAAA,QAAQ,EAAGyB,OAAD,IAAaxB,OAAO,CAACwB,OAAD,CAH/B,CAIC;;AAJD;AAAA;AAAA;AAAA;AAAA,YADD,eAOC;AAAK,MAAA,SAAS,EAAC,EAAf;AAAkB,MAAA,GAAG,MAArB;AAAsB,MAAA,GAAG,EAAEzB;AAA3B;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA,kBADD;AAWA;;GAtCQP,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf","sourcesContent":["/** @format */\n\nimport React, { useState } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\n\nfunction CropDemo({ src }) {\n\tconst [upImg, setUpImg] = useState();\n\tconst imgRef = useRef(null);\n\tconst previewCanvasRef = useRef(null);\n\tconst [crop, setCrop] = useState({ unit: '%', width: 30, aspect: 16 / 9 });\n\tconst [completedCrop, setCompletedCrop] = useState(null);\n\n\tconst onSelectFile = (e) => {\n\t\tif (e.target.files && e.target.files.length > 0) {\n\t\t\tconst reader = new FileReader();\n\t\t\treader.addEventListener('load', () => setUpImg(reader.result));\n\t\t\treader.readAsDataURL(e.target.files[0]);\n\t\t}\n\t};\n\n\t// As a blob\n\tnew Promise((resolve, reject) => {\n\t\tcanvas.toBlob(\n\t\t\t(blob) => {\n\t\t\t\tblob.name = fileName;\n\t\t\t\tresolve(blob);\n\t\t\t},\n\t\t\t'image/jpeg',\n\t\t\t1\n\t\t);\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<ReactCrop\n\t\t\t\tsrc=\"https://blog.intercomassets.com/blog/wp-content/uploads/2018/05/Design-leadership-as-a-subversive-activity-.png\"\n\t\t\t\tcrop={crop}\n\t\t\t\tonChange={(newCrop) => setCrop(newCrop)}\n\t\t\t\t// onImageLoaded={onImageLoaded}\n\t\t\t/>\n\t\t\t<img className=\"\" alt src={crop}></img>\n\t\t</>\n\t);\n}\n\nexport default CropDemo;\n"]},"metadata":{},"sourceType":"module"}